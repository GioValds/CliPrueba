#!/bin/bash

# Simulador del pipeline de CI para ejecuciÃ³n local

echo "ðŸ§ª EJECUTANDO CI LOCAL - Flutter Testing Demo"

# ConfiguraciÃ³n
FLUTTER_VERSION=$(flutter --version | head -1)
echo "Flutter: $FLUTTER_VERSION"

# Ejecutar el runner principal
./scripts/ci_runner.sh

# VerificaciÃ³n adicional de mÃ©tricas
echo ""
echo "ðŸ“ˆ MÃ‰TRICAS DEL PROYECTO:"
echo "----------------------------"

# Contar pruebas
UNIT_TESTS=$(find test -name "*_test.dart" | wc -l)
echo "â€¢ Pruebas unitarias: $UNIT_TESTS archivos"

# Calcular lÃ­neas de cÃ³digo aproximadas
LOC=$(find lib -name "*.dart" -exec cat {} \; | wc -l)
echo "â€¢ LÃ­neas de cÃ³digo: $LOC"

# Verificar cobertura si existe
if [ -f "coverage/lcov.info" ]; then
    COVERAGE=$(lcov --summary coverage/lcov.info 2>/dev/null | grep "lines" | awk '{print $2}' || echo "N/A")
    echo "â€¢ Cobertura aproximada: $COVERAGE"
fi

echo ""
echo "âœ… CI LOCAL COMPLETADO"
echo "ðŸ“‹ Next: git add . && git commit -m 'feat: add complete test suite' && git push"